pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = credentials('github-jenkins-token')
        SERVER_CREDENTIALS = credentials('linux-server-credentials')
        IMAGE_PATH = "/var/lib/jenkins/images/monitoring-logs.tar"
    }

    stages {
        stage('Clone Git Repository') {
            steps {
                echo 'Cloning the Git repository containing Monitoring-logs.py'
                git credentialsId: "${GITHUB_CREDENTIALS}", url: 'https://github.com/MajdHHH/Monitoring-logs.git', branch: 'main'
            }
        }

        stage('Verify Docker Installation') {
            steps {
                echo 'Verifying Docker installation'
                sh 'docker --version'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building the Docker image for Monitoring-logs.py'
                script {
                    sh '''
                    echo FROM python:3.9-slim > Dockerfile
                    echo WORKDIR /app >> Dockerfile
                    echo COPY . /app >> Dockerfile
                    echo RUN pip install -r requirements.txt >> Dockerfile
                    echo CMD ["python3", "Monitoring-logs.py"] >> Dockerfile

                    docker build -t monitoring-logs .
                    mkdir -p /var/lib/jenkins/images
                    docker save -o /var/lib/jenkins/images/monitoring-logs.tar monitoring-logs
                    '''
                }
            }
        }

        stage('Deploy to Server') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'linux-server-credentials', usernameVariable: 'SSH_USER', passwordVariable: 'SSH_PASS')]) {
                    script {
                        sh '''
                        sshpass -p "${SSH_PASS}" scp -o StrictHostKeyChecking=no /var/lib/jenkins/images/monitoring-logs.tar ${SSH_USER}@192.168.1.134:/root/images/
                        sshpass -p "${SSH_PASS}" ssh -o StrictHostKeyChecking=no ${SSH_USER}@192.168.1.134 "docker load -i /root/images/monitoring-logs.tar"
                        sshpass -p "${SSH_PASS}" ssh -o StrictHostKeyChecking=no ${SSH_USER}@192.168.1.134 "docker run -d --name monitoring-logs-container monitoring-logs"
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                cleanWs()
            }
        }
    }
}
